// main: ../layout-tiles.less

.mgl-layout-3-ooo {
    @columns: "[col1-start] 33.5%  [col2-start] 66.5% [col2-end]";
    @rows: "[row1-start] auto [row2-start] auto [row2-end]";
    grid-template-columns: e(@columns);
    grid-template-rows: e(@rows);

    .a {
        grid-column: col1-start / col2-start;
        grid-row: row1-start / row2-start;
    }
    .b {
        grid-column: col1-start / col2-start;
        grid-row: row2-start;
    }
    .c {
        grid-column: col2-start;
        grid-row: row1-start / row2-end ;
    }
}

.mgl-layout-3-ioo {
    @columns: "[col1-start] 18.2%  [col2-start] 40.9%  [col3-start] 40.9% [col3-end]";
    @rows: "[row1-start] auto [row1-end]";
    grid-template-columns: e(@columns);
    grid-template-rows: e(@rows);

    .a {
        grid-column: col1-start / col2-start;
        grid-row: row1-start / row2-end;
    }
    .b {
        grid-column: col2-start / col3-start;
        grid-row: row1-start / row2-end;
    }
    .c {
        grid-column: col3-start;
        grid-row: row1-start / row2-start ;
    }
}

.mgl-layout-3-oio {
    @columns: "[col1-start] 40.9%  [col2-start] 18.2%  [col3-start] 40.9% [col3-end]";
    @rows: "[row1-start] auto [row1-end]";
    grid-template-columns: e(@columns);
    grid-template-rows: e(@rows);

    .a {
        grid-column: col1-start / col2-start;
        grid-row: row1-start / row2-end;
    }
    .b {
        grid-column: col2-start / col3-start;
        grid-row: row1-start / row2-end;
    }
    .c {
        grid-column: col3-start;
        grid-row: row1-start / row2-start ;
    }
}

.mgl-layout-3-ooi {
    @columns: "[col1-start] 40.9%  [col2-start] 40.9%  [col3-start] 18.2% [col3-end]";
    @rows: "[row1-start] auto [row1-end]";
    grid-template-columns: e(@columns);
    grid-template-rows: e(@rows);

    .a {
        grid-column: col1-start / col2-start;
        grid-row: row1-start / row2-end;
    }
    .b {
        grid-column: col2-start / col3-start;
        grid-row: row1-start / row2-end;
    }
    .c {
        grid-column: col3-start;
        grid-row: row1-start / row2-start ;
    }
}

.mgl-layout-3-oii {
    @columns: "[col1-start] 52.94% [col2-start] 23.53%  [col3-start] 23.53% [col3-end]";
    @rows: "[row1-start] auto [row1-end]";
    grid-template-columns: e(@columns);
    grid-template-rows: e(@rows);

    .a {
        grid-column: col1-start / col2-start;
        grid-row: row1-start / row2-end;
    }
    .b {
        grid-column: col2-start / col3-start;
        grid-row: row1-start / row2-end;
    }
    .c {
        grid-column: col3-start;
        grid-row: row1-start / row2-start ;
    }
}

.mgl-layout-3-ioi {
    @columns: "[col1-start] 23.53% [col2-start] 52.94%  [col3-start] 23.53% [col3-end]";
    @rows: "[row1-start] auto [row1-end]";
    grid-template-columns: e(@columns);
    grid-template-rows: e(@rows);

    .a {
        grid-column: col1-start / col2-start;
        grid-row: row1-start / row2-end;
    }
    .b {
        grid-column: col2-start / col3-start;
        grid-row: row1-start / row2-end;
    }
    .c {
        grid-column: col3-start;
        grid-row: row1-start / row2-start ;
    }
}

.mgl-layout-3-iio {
    @columns: "[col1-start] 23.53% [col2-start] 23.53%  [col3-start] 52.94% [col3-end]";
    @rows: "[row1-start] auto [row1-end]";
    grid-template-columns: e(@columns);
    grid-template-rows: e(@rows);

    .a {
        grid-column: col1-start / col2-start;
        grid-row: row1-start / row2-end;
    }
    .b {
        grid-column: col2-start / col3-start;
        grid-row: row1-start / row2-end;
    }
    .c {
        grid-column: col3-start;
        grid-row: row1-start / row2-start;
    }
}

.mgl-layout-3-iii {
    @columns: "[col1-start] 33.33% [col2-start] 33.33%  [col3-start] 33.33% [col3-end]";
    @rows: "[row1-start] auto [row1-end]";
    grid-template-columns: e(@columns);
    grid-template-rows: e(@rows);

    .a {
        grid-column: col1-start / col2-start;
        grid-row: row1-start / row2-end;
    }
    .b {
        grid-column: col2-start / col3-start;
        grid-row: row1-start / row2-end;
    }
    .c {
        grid-column: col3-start;
        grid-row: row1-start / row2-start ;
    }
}